{"ast":null,"code":"var _jsxFileName = \"S:\\\\Code\\\\Hi_808_V2\\\\front-end-update\\\\src\\\\page\\\\cinema\\\\movies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport API_MOVIES from '../../API/moviesServise';\nimport CollectionCards from '../../components/collectionCards/collectionCards';\nimport Header from '../../components/header';\nimport mediaSave from '../../store/mediaSave';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  // const dispatch = useDispatch();\n  // const [moviesData, setMoviesData] = useState([]);\n  // const temp = useSelector(state => state.mediaSave);\n\n  // const getMovies = async () => {\n  //   if (!moviesData[0] && !temp[0]) {\n\n  //     setMoviesData(await API_MOVIES.foundMovies({ name: '' }));\n  //     dispatch(mediaSave.refreshMovies({media: moviesData}))\n  //   }\n  // };\n  // getMovies();\n  const [isLoading, setIsLoading] = useState(false);\n  const [mediaData, setMediaData] = useState([]);\n  useEffect(() => {\n    const server = async () => {\n      setIsLoading(true);\n      const response = await API_MOVIES.foundMovies({});\n      if (!response.ok) {\n        console.log(2);\n      } else {\n        const resData = await response;\n      }\n      setIsLoading(false);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: isLoading && /*#__PURE__*/_jsxDEV(CollectionCards, {\n      data: mediaData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"cUh42jBAWmmYCwP0pJjMTMojRj8=\");\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","API_MOVIES","CollectionCards","Header","mediaSave","jsxDEV","_jsxDEV","Movies","_s","isLoading","setIsLoading","mediaData","setMediaData","server","response","foundMovies","ok","console","log","resData","Fragment","children","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["S:/Code/Hi_808_V2/front-end-update/src/page/cinema/movies.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport API_MOVIES from '../../API/moviesServise';\r\n\r\nimport CollectionCards from '../../components/collectionCards/collectionCards';\r\nimport Header from '../../components/header';\r\nimport mediaSave from '../../store/mediaSave';\r\n\r\nconst Movies = () => {\r\n  // const dispatch = useDispatch();\r\n  // const [moviesData, setMoviesData] = useState([]);\r\n  // const temp = useSelector(state => state.mediaSave);\r\n\r\n  // const getMovies = async () => {\r\n  //   if (!moviesData[0] && !temp[0]) {\r\n\r\n  //     setMoviesData(await API_MOVIES.foundMovies({ name: '' }));\r\n  //     dispatch(mediaSave.refreshMovies({media: moviesData}))\r\n  //   }\r\n  // };\r\n  // getMovies();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [mediaData, setMediaData] = useState([]);\r\n  useEffect(() => {\r\n    const server = async () => {\r\n        setIsLoading(true);\r\n        const response = await API_MOVIES.foundMovies({});\r\n      if (!response.ok) {\r\n        console.log(2);\r\n      } else {\r\n        const resData = await response;\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <CollectionCards data={mediaData} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,UAAU,MAAM,yBAAyB;AAEhD,OAAOC,eAAe,MAAM,kDAAkD;AAC9E,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9CD,SAAS,CAAC,MAAM;IACd,MAAMgB,MAAM,GAAG,MAAAA,CAAA,KAAY;MACvBH,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMI,QAAQ,GAAG,MAAMb,UAAU,CAACc,WAAW,CAAC,CAAC,CAAC,CAAC;MACnD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChBC,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;MAChB,CAAC,MAAM;QACL,MAAMC,OAAO,GAAG,MAAML,QAAQ;MAChC;MACAJ,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEJ,OAAA,CAACV,KAAK,CAACwB,QAAQ;IAAAC,QAAA,EACZZ,SAAS,iBAAIH,OAAA,CAACJ,eAAe;MAACoB,IAAI,EAAEX;IAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAErB,CAAC;AAAClB,EAAA,CAjCID,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAmCZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}