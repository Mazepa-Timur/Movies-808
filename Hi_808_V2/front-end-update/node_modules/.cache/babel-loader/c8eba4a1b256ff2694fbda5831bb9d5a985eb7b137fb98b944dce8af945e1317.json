{"ast":null,"code":"import { userStoreAction } from '../reducers/userStore';\nimport { Cookies } from 'react-cookie';\nconst cookies = new Cookies();\n\n// export const setOAuthAction = (data) => {\n//   return async (dispatch) => {\n//     try {\n//       if (cookies.get('access_token')) {\n//         let response = await fetch(\n//           'http://localhost:8008/user/authorization',\n//           {\n//             method: 'POST',\n//             headers: {\n//               'Content-Type': 'application/json',\n//               Authorization: cookies.get('access_token'),\n//             },\n//             body: '',\n//           }\n//         );\n//         // const res = await response.json();\n//         if (response.status >= 500) {\n//           response = await fetch(\n//             'http://localhost:8008/user/updateToken',\n//             {\n//               method: 'POST',\n//               headers: {\n//                 'Content-Type': 'application/json',\n//               },\n//               body: JSON.stringify({\n//                 refresh_token: cookies.get('refresh_token'),\n//               }),\n//             }\n//           );\n//         }\n//         const res = await response.json();\n//         // console.log('authorization', res.user);\n//         if (response.ok) {\n//           dispatch(userStoreAction.setUserData(res.user));\n//         } else {\n//           dispatch(userStoreAction.removeUserData());\n//         }\n//       }\n//     } catch (error) {\n//       console.error('hi-808: ', error);\n//     }\n//   };\n// };","map":{"version":3,"names":["userStoreAction","Cookies","cookies"],"sources":["C:/Users/TNMYP/Documents/GitHub/Movies-808/Hi_808_V2/front-end-update/src/store/actions/oauthAction.js"],"sourcesContent":["import { userStoreAction } from '../reducers/userStore';\r\nimport { Cookies } from 'react-cookie';\r\nconst cookies = new Cookies();\r\n\r\n// export const setOAuthAction = (data) => {\r\n//   return async (dispatch) => {\r\n//     try {\r\n//       if (cookies.get('access_token')) {\r\n//         let response = await fetch(\r\n//           'http://localhost:8008/user/authorization',\r\n//           {\r\n//             method: 'POST',\r\n//             headers: {\r\n//               'Content-Type': 'application/json',\r\n//               Authorization: cookies.get('access_token'),\r\n//             },\r\n//             body: '',\r\n//           }\r\n//         );\r\n//         // const res = await response.json();\r\n//         if (response.status >= 500) {\r\n//           response = await fetch(\r\n//             'http://localhost:8008/user/updateToken',\r\n//             {\r\n//               method: 'POST',\r\n//               headers: {\r\n//                 'Content-Type': 'application/json',\r\n//               },\r\n//               body: JSON.stringify({\r\n//                 refresh_token: cookies.get('refresh_token'),\r\n//               }),\r\n//             }\r\n//           );\r\n//         }\r\n//         const res = await response.json();\r\n//         // console.log('authorization', res.user);\r\n//         if (response.ok) {\r\n//           dispatch(userStoreAction.setUserData(res.user));\r\n//         } else {\r\n//           dispatch(userStoreAction.removeUserData());\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('hi-808: ', error);\r\n//     }\r\n//   };\r\n// };\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,uBAAuB;AACvD,SAASC,OAAO,QAAQ,cAAc;AACtC,MAAMC,OAAO,GAAG,IAAID,OAAO,CAAC,CAAC;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}