{"ast":null,"code":"import { userStoreAction } from '../reducers/userStore';\nimport { Cookies } from 'react-cookie';\nconst cookies = new Cookies();\nexport const setSettingAction = (data, typeForm) => {\n  return async dispatch => {\n    try {\n      if (Object.keys(data).length) {\n        if (typeForm === 'setting') {\n          const response = await fetch('http://localhost:8008/user/setting', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization: cookies.get('access_token')\n            },\n            body: JSON.stringify(data)\n          });\n          const res = await response.json();\n          if (response.ok) {\n            dispatch(userStoreAction.changeSetting({\n              color: data.color,\n              theme: data.theme\n            }));\n            console.log('Setting success');\n          } else {\n            console.log(res);\n          }\n        }\n      }\n    } catch (error) {\n      console.error('hi-808: ', error);\n      return error;\n    }\n  };\n};","map":{"version":3,"names":["userStoreAction","Cookies","cookies","setSettingAction","data","typeForm","dispatch","Object","keys","length","response","fetch","method","headers","Authorization","get","body","JSON","stringify","res","json","ok","changeSetting","color","theme","console","log","error"],"sources":["C:/Users/TNMYP/Documents/GitHub/Movies-808/Hi_808_V2/front-end-update/src/store/actions/settingAction.js"],"sourcesContent":["import { userStoreAction } from '../reducers/userStore';\r\nimport { Cookies } from 'react-cookie';\r\nconst cookies = new Cookies();\r\n\r\nexport const setSettingAction = (data, typeForm) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      if (Object.keys(data).length) {\r\n          if (typeForm === 'setting') {\r\n            const response = await fetch('http://localhost:8008/user/setting', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: cookies.get('access_token'),\r\n              },\r\n              body: JSON.stringify(data),\r\n            });\r\n            const res = await response.json();\r\n            if (response.ok) {\r\n              dispatch(userStoreAction.changeSetting({color: data.color, theme: data.theme}));\r\n              console.log('Setting success');\r\n            } else {\r\n              console.log(res);\r\n            }\r\n          }\r\n        }\r\n    } catch (error) {\r\n      console.error('hi-808: ', error);\r\n      return error;\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,uBAAuB;AACvD,SAASC,OAAO,QAAQ,cAAc;AACtC,MAAMC,OAAO,GAAG,IAAID,OAAO,CAAC,CAAC;AAE7B,OAAO,MAAME,gBAAgB,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;EAClD,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF,IAAIC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAACK,MAAM,EAAE;QAC1B,IAAIJ,QAAQ,KAAK,SAAS,EAAE;UAC1B,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;YACjEC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClCC,aAAa,EAAEZ,OAAO,CAACa,GAAG,CAAC,cAAc;YAC3C,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,IAAI;UAC3B,CAAC,CAAC;UACF,MAAMe,GAAG,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;UACjC,IAAIV,QAAQ,CAACW,EAAE,EAAE;YACff,QAAQ,CAACN,eAAe,CAACsB,aAAa,CAAC;cAACC,KAAK,EAAEnB,IAAI,CAACmB,KAAK;cAAEC,KAAK,EAAEpB,IAAI,CAACoB;YAAK,CAAC,CAAC,CAAC;YAC/EC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;UAChC,CAAC,MAAM;YACLD,OAAO,CAACC,GAAG,CAACP,GAAG,CAAC;UAClB;QACF;MACF;IACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAChC,OAAOA,KAAK;IACd;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}