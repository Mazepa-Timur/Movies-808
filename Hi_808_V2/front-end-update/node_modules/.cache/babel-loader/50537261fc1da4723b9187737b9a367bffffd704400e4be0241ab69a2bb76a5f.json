{"ast":null,"code":"// import { userDataAction } from '../reducers/userStore';\nimport { Cookies } from 'react-cookie';\nconst cookies = new Cookies();\nexport const setOAuthAction = data => {\n  return async dispatch => {\n    try {\n      const response = await fetch('http://localhost:8008/user/authorization', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: cookies.get('access_token')\n        },\n        body: ''\n      });\n      const res = await response.json();\n      if (response.ok) {\n        console.log(res);\n      }\n      console.log(response.status);\n      if (r) {}\n      // console.log(cookies.get('access_token'));\n      //   const response = await fetch('http://localhost:8008/user/updateToken', {\n      //     method: 'POST',\n      //     headers: {\n      //       'Content-Type': 'application/json',\n      //     },\n      //     body: JSON.stringify({ refresh_token: cookies.get('refresh_token') }),\n      //   });\n      //   const res = await response.json();\n      //   if (response.ok === false) {\n      //     cookies.remove('access_token');\n      //     cookies.remove('refresh_token');\n      //   } else {\n      //     cookies.set('access_token', res.access_token);\n      //     cookies.set('refresh_token', res.refresh_token);\n      //   }\n    } catch (error) {\n      console.error('hi-808: ', error);\n    }\n  };\n};","map":{"version":3,"names":["Cookies","cookies","setOAuthAction","data","dispatch","response","fetch","method","headers","Authorization","get","body","res","json","ok","console","log","status","r","error"],"sources":["S:/Code/Hi_808_V2/front-end-update/src/store/actions/oauthAction.js"],"sourcesContent":["// import { userDataAction } from '../reducers/userStore';\r\nimport { Cookies } from 'react-cookie';\r\nconst cookies = new Cookies();\r\n\r\nexport const setOAuthAction = (data) => {\r\n  return async (dispatch) => {\r\n    try {\r\n        const response = await fetch(\r\n          'http://localhost:8008/user/authorization',\r\n          {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: cookies.get('access_token'),\r\n            },\r\n            body: '',\r\n          }\r\n        );\r\n        const res = await response.json();\r\n        if (response.ok) {\r\n          console.log(res);\r\n        }\r\n        console.log(response.status);\r\n        if (r) {\r\n          \r\n        }\r\n      // console.log(cookies.get('access_token'));\r\n      //   const response = await fetch('http://localhost:8008/user/updateToken', {\r\n      //     method: 'POST',\r\n      //     headers: {\r\n      //       'Content-Type': 'application/json',\r\n      //     },\r\n      //     body: JSON.stringify({ refresh_token: cookies.get('refresh_token') }),\r\n      //   });\r\n      //   const res = await response.json();\r\n      //   if (response.ok === false) {\r\n      //     cookies.remove('access_token');\r\n      //     cookies.remove('refresh_token');\r\n      //   } else {\r\n      //     cookies.set('access_token', res.access_token);\r\n      //     cookies.set('refresh_token', res.refresh_token);\r\n      //   }\r\n    } catch (error) {\r\n      console.error('hi-808: ', error);\r\n    }\r\n  };\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,OAAO,QAAQ,cAAc;AACtC,MAAMC,OAAO,GAAG,IAAID,OAAO,CAAC,CAAC;AAE7B,OAAO,MAAME,cAAc,GAAIC,IAAI,IAAK;EACtC,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0CAA0C,EAC1C;QACEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAER,OAAO,CAACS,GAAG,CAAC,cAAc;QAC3C,CAAC;QACDC,IAAI,EAAE;MACR,CACF,CAAC;MACD,MAAMC,GAAG,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACjC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;MAClB;MACAG,OAAO,CAACC,GAAG,CAACX,QAAQ,CAACY,MAAM,CAAC;MAC5B,IAAIC,CAAC,EAAE,CAEP;MACF;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAClC;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}