{"ast":null,"code":"var _jsxFileName = \"S:\\\\Code\\\\Hi_808_V2\\\\front-end-update\\\\src\\\\page\\\\cinema\\\\About.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport { setMediaAction } from '../../store/actions/mediaAction';\nimport { mediaStoreAction } from '../../store/reducers/mediaStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst About = () => {\n  _s();\n  var _data$length;\n  //   const [data, setData] = useState({});\n  const [searchParams] = useSearchParams();\n  const movieId = searchParams.get('id');\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.mediaStore.aboutMedia);\n  console.log(data, (_data$length = !data.length) !== null && _data$length !== void 0 ? _data$length : !data);\n  useEffect(() => {\n    if (!data.length || !data) {\n      setMediaAction({\n        _id: movieId\n      })(dispatch);\n    } else {\n      dispatch(mediaStoreAction.localSearchId(movieId));\n      console.log(data);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"rtgerg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), data.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"filmImage\",\n      src: data.image,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(About, \"7ugS//vsdcwwkmi7xkKcvCG6GC8=\", false, function () {\n  return [useSearchParams, useDispatch, useSelector];\n});\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useSearchParams","setMediaAction","mediaStoreAction","jsxDEV","_jsxDEV","About","_s","_data$length","searchParams","movieId","get","dispatch","data","state","mediaStore","aboutMedia","console","log","length","_id","localSearchId","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","name","image","className","src","alt","_c","$RefreshReg$"],"sources":["S:/Code/Hi_808_V2/front-end-update/src/page/cinema/About.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { setMediaAction } from '../../store/actions/mediaAction';\r\nimport { mediaStoreAction } from '../../store/reducers/mediaStore';\r\n\r\nconst About = () => {\r\n//   const [data, setData] = useState({});\r\n  const [searchParams] = useSearchParams();\r\n  const movieId = searchParams.get('id');\r\n\r\n  const dispatch = useDispatch();\r\n  const data= useSelector((state) => state.mediaStore.aboutMedia);\r\n  console.log(data, !data.length ?? !data);\r\n\r\n  useEffect(() => {\r\n    if (!data.length || !data) {\r\n      setMediaAction({ _id: movieId })(dispatch);\r\n    } else {\r\n        dispatch(mediaStoreAction.localSearchId(movieId))\r\n        console.log(data);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <p>rtgerg</p>\r\n      <p>{data.name}</p>\r\n      {data.image && <img className=\"filmImage\" src={data.image} alt=\"\" />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,cAAc,QAAQ,iCAAiC;AAChE,SAASC,gBAAgB,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,YAAA;EACpB;EACE,MAAM,CAACC,YAAY,CAAC,GAAGR,eAAe,CAAC,CAAC;EACxC,MAAMS,OAAO,GAAGD,YAAY,CAACE,GAAG,CAAC,IAAI,CAAC;EAEtC,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,IAAI,GAAEb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,UAAU,CAACC,UAAU,CAAC;EAC/DC,OAAO,CAACC,GAAG,CAACL,IAAI,GAAAL,YAAA,GAAE,CAACK,IAAI,CAACM,MAAM,cAAAX,YAAA,cAAAA,YAAA,GAAI,CAACK,IAAI,CAAC;EAExChB,SAAS,CAAC,MAAM;IACd,IAAI,CAACgB,IAAI,CAACM,MAAM,IAAI,CAACN,IAAI,EAAE;MACzBX,cAAc,CAAC;QAAEkB,GAAG,EAAEV;MAAQ,CAAC,CAAC,CAACE,QAAQ,CAAC;IAC5C,CAAC,MAAM;MACHA,QAAQ,CAACT,gBAAgB,CAACkB,aAAa,CAACX,OAAO,CAAC,CAAC;MACjDO,OAAO,CAACC,GAAG,CAACL,IAAI,CAAC;IACrB;EACF,CAAC,CAAC;EAEF,oBACER,OAAA,CAACT,KAAK,CAAC0B,QAAQ;IAAAC,QAAA,gBACblB,OAAA;MAAAkB,QAAA,EAAG;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACbtB,OAAA;MAAAkB,QAAA,EAAIV,IAAI,CAACe;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBd,IAAI,CAACgB,KAAK,iBAAIxB,OAAA;MAAKyB,SAAS,EAAC,WAAW;MAACC,GAAG,EAAElB,IAAI,CAACgB,KAAM;MAACG,GAAG,EAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAErB,CAAC;AAACpB,EAAA,CAzBID,KAAK;EAAA,QAEcL,eAAe,EAGrBF,WAAW,EAChBC,WAAW;AAAA;AAAAiC,EAAA,GANnB3B,KAAK;AA2BX,eAAeA,KAAK;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}