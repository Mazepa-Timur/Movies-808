{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst localTheme = localStorage.getItem('theme');\nconst themeDefault = localTheme === 'darkTheme' ? 'darkTheme' : 'lightTheme';\nconst settingStyle = createSlice({\n  name: 'settingStyle',\n  initialState: {\n    theme: themeDefault,\n    backgraungColor: '#1A1A1A',\n    color: '#1889C8'\n  },\n  reducers: {\n    changeTheme: state => {\n      const theme = state.theme === 'lightTheme' ? 'darkTheme' : 'lightTheme';\n      localStorage.setItem('theme', theme);\n      return {\n        ...state,\n        theme\n      };\n    },\n    // changeColor: (state, action) => {\n    //   const {color} = action.payload\n    //   return {...state, color}\n    // },\n    // updataSetting: (state, action) => {\n    //   const {color} = action.payload\n    //   const theme = action.payload.theme === 'darkTheme' ? 'darkTheme' : 'lightTheme';\n    //   return {...state, color, theme}\n    // },\n    restart: state => {\n      return {\n        ...state\n      };\n    }\n  }\n});\nexport const settingStyleAction = settingStyle.actions;\nexport default settingStyle.reducer;","map":{"version":3,"names":["createSlice","localTheme","localStorage","getItem","themeDefault","settingStyle","name","initialState","theme","backgraungColor","color","reducers","changeTheme","state","setItem","restart","settingStyleAction","actions","reducer"],"sources":["S:/Code/Hi_808_V2/front-end-update/src/store/reducers/settingStyle.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst localTheme = localStorage.getItem('theme');\r\nconst themeDefault = localTheme === 'darkTheme' ? 'darkTheme' : 'lightTheme';\r\n\r\nconst settingStyle = createSlice({\r\n  name: 'settingStyle',\r\n  initialState: {\r\n    theme: themeDefault,\r\n    backgraungColor: '#1A1A1A',\r\n    color: '#1889C8',\r\n  },\r\n  reducers: {\r\n    changeTheme: (state) => {\r\n      const theme = state.theme === 'lightTheme' ? 'darkTheme' : 'lightTheme';\r\n      localStorage.setItem('theme', theme);\r\n      return { ...state, theme };\r\n    },\r\n    // changeColor: (state, action) => {\r\n    //   const {color} = action.payload\r\n    //   return {...state, color}\r\n    // },\r\n    // updataSetting: (state, action) => {\r\n    //   const {color} = action.payload\r\n    //   const theme = action.payload.theme === 'darkTheme' ? 'darkTheme' : 'lightTheme';\r\n    //   return {...state, color, theme}\r\n    // },\r\n    restart: (state) => {\r\n      return { ...state };\r\n    },\r\n  },\r\n});\r\nexport const settingStyleAction = settingStyle.actions;\r\n\r\nexport default settingStyle.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAChD,MAAMC,YAAY,GAAGH,UAAU,KAAK,WAAW,GAAG,WAAW,GAAG,YAAY;AAE5E,MAAMI,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE;IACZC,KAAK,EAAEJ,YAAY;IACnBK,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAGC,KAAK,IAAK;MACtB,MAAML,KAAK,GAAGK,KAAK,CAACL,KAAK,KAAK,YAAY,GAAG,WAAW,GAAG,YAAY;MACvEN,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEN,KAAK,CAAC;MACpC,OAAO;QAAE,GAAGK,KAAK;QAAEL;MAAM,CAAC;IAC5B,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAO,OAAO,EAAGF,KAAK,IAAK;MAClB,OAAO;QAAE,GAAGA;MAAM,CAAC;IACrB;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAMG,kBAAkB,GAAGX,YAAY,CAACY,OAAO;AAEtD,eAAeZ,YAAY,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}