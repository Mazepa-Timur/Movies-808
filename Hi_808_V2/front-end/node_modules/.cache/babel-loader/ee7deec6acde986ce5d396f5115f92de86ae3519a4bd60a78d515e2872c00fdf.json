{"ast":null,"code":"var _jsxFileName = \"S:\\\\Code\\\\Hi_808_V2\\\\front-end-update\\\\src\\\\page\\\\cinema\\\\movies.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport API_MOVIES from '../../API/moviesServise';\nimport CollectionCards from '../../components/collectionCards/collectionCards';\nimport Header from '../../components/header';\nimport mediaSave from '../../store/mediaSave';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(false);\n  const [mediaData, setMediaData] = useState([]);\n  const {\n    media: response\n  } = useSelector(state => state.mediaSave);\n  console.log(3, response);\n  useEffect(() => {\n    const server = async () => {\n      setIsLoading(true);\n      if (!response[0]) {\n        const res = await API_MOVIES.foundMovies({\n          name: ''\n        });\n        setMediaData(res);\n        console.log(2);\n      } else {\n        if (response[0]) {\n          setMediaData(response);\n          console.log(response);\n        }\n      }\n      setIsLoading(false);\n    };\n    server();\n  }, []);\n  // if (mediaData[0]) {\n  // }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [mediaData[0] && /*#__PURE__*/_jsxDEV(CollectionCards, {\n      data: mediaData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 24\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"MuW37nVICgQq7PIsH+T/9giXABo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","API_MOVIES","CollectionCards","Header","mediaSave","jsxDEV","_jsxDEV","Movies","_s","dispatch","isLoading","setIsLoading","mediaData","setMediaData","media","response","state","console","log","server","res","foundMovies","name","Fragment","children","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["S:/Code/Hi_808_V2/front-end-update/src/page/cinema/movies.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport API_MOVIES from '../../API/moviesServise';\r\n\r\nimport CollectionCards from '../../components/collectionCards/collectionCards';\r\nimport Header from '../../components/header';\r\nimport mediaSave from '../../store/mediaSave';\r\n\r\nconst Movies = () => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [mediaData, setMediaData] = useState([]);\r\n  const { media: response } = useSelector((state) => state.mediaSave);\r\n  console.log(3, response);\r\n  useEffect(() => {\r\n    const server = async () => {\r\n      setIsLoading(true);\r\n      if (!response[0]) {\r\n        const res = await API_MOVIES.foundMovies({ name: '' });\r\n        setMediaData(res);\r\n\r\n        console.log(2);\r\n      } else {\r\n        if (response[0]) {\r\n          setMediaData(response);\r\n          console.log(response);\r\n        }\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    \r\n    server();\r\n  }, []);\r\n  // if (mediaData[0]) {\r\n  // }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {mediaData[0] && <CollectionCards data={mediaData} />}\r\n      {isLoading && <p>not found</p>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,UAAU,MAAM,yBAAyB;AAEhD,OAAOC,eAAe,MAAM,kDAAkD;AAC9E,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM;IAAEgB,KAAK,EAAEC;EAAS,CAAC,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACZ,SAAS,CAAC;EACnEa,OAAO,CAACC,GAAG,CAAC,CAAC,EAAEH,QAAQ,CAAC;EACxBlB,SAAS,CAAC,MAAM;IACd,MAAMsB,MAAM,GAAG,MAAAA,CAAA,KAAY;MACzBR,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAC,EAAE;QAChB,MAAMK,GAAG,GAAG,MAAMnB,UAAU,CAACoB,WAAW,CAAC;UAAEC,IAAI,EAAE;QAAG,CAAC,CAAC;QACtDT,YAAY,CAACO,GAAG,CAAC;QAEjBH,OAAO,CAACC,GAAG,CAAC,CAAC,CAAC;MAChB,CAAC,MAAM;QACL,IAAIH,QAAQ,CAAC,CAAC,CAAC,EAAE;UACfF,YAAY,CAACE,QAAQ,CAAC;UACtBE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;QACvB;MACF;MACAJ,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDQ,MAAM,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EACN;EACA;;EAEA,oBACEb,OAAA,CAACV,KAAK,CAAC2B,QAAQ;IAAAC,QAAA,GACZZ,SAAS,CAAC,CAAC,CAAC,iBAAIN,OAAA,CAACJ,eAAe;MAACuB,IAAI,EAAEb;IAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACpDnB,SAAS,iBAAIJ,OAAA;MAAAkB,QAAA,EAAG;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAErB,CAAC;AAACrB,EAAA,CAlCID,MAAM;EAAA,QACOR,WAAW,EAGAC,WAAW;AAAA;AAAA8B,EAAA,GAJnCvB,MAAM;AAoCZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}