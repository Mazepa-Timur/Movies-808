{"ast":null,"code":"var _jsxFileName = \"S:\\\\Code\\\\Hi_808_V2\\\\front-end-update\\\\src\\\\page\\\\cinema\\\\searchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setMediaAction } from '../../store/actions/mediaAction';\nimport CollectionCardsMedia from '../../components/collectionCards/collectionCardsMedia';\nimport SearchEngine from '../../items/searchEngine/searchEngine';\nimport { mediaStoreAction } from '../../store/reducers/mediaStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const movieName = searchParams.get('name');\n  const [isFound, setIsFound] = useState(false);\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.mediaStore.me);\n  useEffect(() => {\n    console.log(movieName);\n    const update = async () => {\n      await setMediaAction({\n        name: movieName\n      }, 'search')(dispatch);\n      await dispatch(mediaStoreAction.isSearch());\n      console.log('not movie', movieName);\n    };\n    update();\n  }, [movieName]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchEngine, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CollectionCardsMedia, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"f/OB287G+rmIyvHwJbxCgj6awrQ=\", false, function () {\n  return [useSearchParams, useDispatch, useSelector];\n});\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useEffect","useState","useSearchParams","useDispatch","useSelector","setMediaAction","CollectionCardsMedia","SearchEngine","mediaStoreAction","jsxDEV","_jsxDEV","SearchPage","_s","searchParams","movieName","get","isFound","setIsFound","dispatch","data","state","mediaStore","me","console","log","update","name","isSearch","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["S:/Code/Hi_808_V2/front-end-update/src/page/cinema/searchPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { setMediaAction } from '../../store/actions/mediaAction';\r\n\r\nimport CollectionCardsMedia from '../../components/collectionCards/collectionCardsMedia';\r\nimport SearchEngine from '../../items/searchEngine/searchEngine';\r\nimport { mediaStoreAction } from '../../store/reducers/mediaStore';\r\n\r\nconst SearchPage = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const movieName = searchParams.get('name');\r\n  const [isFound, setIsFound] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.mediaStore.me);\r\n\r\n  useEffect(() => {\r\n    console.log(movieName);\r\n    const update = async () => {\r\n        await setMediaAction({ name: movieName }, 'search')(dispatch);\r\n        await dispatch(mediaStoreAction.isSearch())\r\n        console.log('not movie', movieName);\r\n    };\r\n    update();\r\n  }, [movieName]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SearchEngine />\r\n      <CollectionCardsMedia data={data} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,cAAc,QAAQ,iCAAiC;AAEhE,OAAOC,oBAAoB,MAAM,uDAAuD;AACxF,OAAOC,YAAY,MAAM,uCAAuC;AAChE,SAASC,gBAAgB,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,CAAC,GAAGX,eAAe,CAAC,CAAC;EACxC,MAAMY,SAAS,GAAGD,YAAY,CAACE,GAAG,CAAC,MAAM,CAAC;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,IAAI,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACC,UAAU,CAACC,EAAE,CAAC;EAExDtB,SAAS,CAAC,MAAM;IACduB,OAAO,CAACC,GAAG,CAACV,SAAS,CAAC;IACtB,MAAMW,MAAM,GAAG,MAAAA,CAAA,KAAY;MACvB,MAAMpB,cAAc,CAAC;QAAEqB,IAAI,EAAEZ;MAAU,CAAC,EAAE,QAAQ,CAAC,CAACI,QAAQ,CAAC;MAC7D,MAAMA,QAAQ,CAACV,gBAAgB,CAACmB,QAAQ,CAAC,CAAC,CAAC;MAC3CJ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEV,SAAS,CAAC;IACvC,CAAC;IACDW,MAAM,CAAC,CAAC;EACV,CAAC,EAAE,CAACX,SAAS,CAAC,CAAC;EAEf,oBACEJ,OAAA,CAACX,KAAK,CAAC6B,QAAQ;IAAAC,QAAA,gBACbnB,OAAA,CAACH,YAAY;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBvB,OAAA,CAACJ,oBAAoB;MAACa,IAAI,EAAEA;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAErB,CAAC;AAACrB,EAAA,CAvBID,UAAU;EAAA,QACST,eAAe,EAGrBC,WAAW,EACfC,WAAW;AAAA;AAAA8B,EAAA,GALpBvB,UAAU;AAyBhB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}