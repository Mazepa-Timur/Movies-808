{"ast":null,"code":"var _jsxFileName = \"S:\\\\Code\\\\Hi_808_V2\\\\front-end-update\\\\src\\\\page\\\\cinema\\\\About.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom';\nimport { setMediaAction } from '../../store/actions/mediaAction';\nimport MovieInfo from '../../components/movieInfo/movieInfo';\nimport VideoPlayer from '../../components/videoPlayer/videoPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst About = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const movieId = searchParams.get('id');\n  const dispatch = useDispatch();\n  const dataRaw = useSelector(state => state.mediaStore.media);\n  const [data, setData] = useState({});\n  const updateMedia = async () => {\n    if (dataRaw._id) {\n      setData(dataRaw);\n    }\n    if (dataRaw.length) {\n      const [dataOne] = await dataRaw.filter(e => e._id === movieId);\n      setData(dataOne);\n    }\n    if (!data._id && !dataRaw._id && !dataRaw.length) {\n      const dataRefresh = await setMediaAction({\n        _id: movieId\n      }, 'search')(dispatch);\n      setData(dataRefresh);\n    }\n  };\n  useEffect(() => {\n    if (!data._id) {\n      updateMedia();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MovieInfo, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(About, \"ruVxQh8tAomcTg9gMZY+OmPHjSA=\", false, function () {\n  return [useSearchParams, useDispatch, useSelector];\n});\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","useSearchParams","setMediaAction","MovieInfo","VideoPlayer","jsxDEV","_jsxDEV","About","_s","searchParams","movieId","get","dispatch","dataRaw","state","mediaStore","media","data","setData","updateMedia","_id","length","dataOne","filter","e","dataRefresh","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["S:/Code/Hi_808_V2/front-end-update/src/page/cinema/About.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { setMediaAction } from '../../store/actions/mediaAction';\r\nimport MovieInfo from '../../components/movieInfo/movieInfo';\r\nimport VideoPlayer from '../../components/videoPlayer/videoPlayer';\r\n\r\nconst About = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const movieId = searchParams.get('id');\r\n\r\n  const dispatch = useDispatch();\r\n  const dataRaw = useSelector((state) => state.mediaStore.media);\r\n\r\n  const [data, setData] = useState({});\r\n\r\n  const updateMedia = async () => {\r\n    if (dataRaw._id) {\r\n      setData(dataRaw);\r\n    }\r\n    if (dataRaw.length) {\r\n      const [dataOne] = await dataRaw.filter((e) => e._id === movieId);\r\n      setData(dataOne);\r\n    }\r\n    if (!data._id && !dataRaw._id && !dataRaw.length) {\r\n      const dataRefresh = await setMediaAction({ _id: movieId }, 'search')(dispatch);\r\n      setData(dataRefresh);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data._id) {\r\n      updateMedia();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MovieInfo data={data} />\r\n      <VideoPlayer />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,cAAc,QAAQ,iCAAiC;AAChE,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAOC,WAAW,MAAM,0CAA0C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,YAAY,CAAC,GAAGR,eAAe,CAAC,CAAC;EACxC,MAAMS,OAAO,GAAGD,YAAY,CAACE,GAAG,CAAC,IAAI,CAAC;EAEtC,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,OAAO,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,UAAU,CAACC,KAAK,CAAC;EAE9D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpC,MAAMqB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIN,OAAO,CAACO,GAAG,EAAE;MACfF,OAAO,CAACL,OAAO,CAAC;IAClB;IACA,IAAIA,OAAO,CAACQ,MAAM,EAAE;MAClB,MAAM,CAACC,OAAO,CAAC,GAAG,MAAMT,OAAO,CAACU,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACJ,GAAG,KAAKV,OAAO,CAAC;MAChEQ,OAAO,CAACI,OAAO,CAAC;IAClB;IACA,IAAI,CAACL,IAAI,CAACG,GAAG,IAAI,CAACP,OAAO,CAACO,GAAG,IAAI,CAACP,OAAO,CAACQ,MAAM,EAAE;MAChD,MAAMI,WAAW,GAAG,MAAMvB,cAAc,CAAC;QAAEkB,GAAG,EAAEV;MAAQ,CAAC,EAAE,QAAQ,CAAC,CAACE,QAAQ,CAAC;MAC9EM,OAAO,CAACO,WAAW,CAAC;IACtB;EACF,CAAC;EAED5B,SAAS,CAAC,MAAM;IACd,IAAI,CAACoB,IAAI,CAACG,GAAG,EAAE;MACbD,WAAW,CAAC,CAAC;IACf;EACF,CAAC,CAAC;EAEF,oBACEb,OAAA,CAACV,KAAK,CAAC8B,QAAQ;IAAAC,QAAA,gBACbrB,OAAA,CAACH,SAAS;MAACc,IAAI,EAAEA;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzBzB,OAAA,CAACF,WAAW;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAErB,CAAC;AAACvB,EAAA,CAnCID,KAAK;EAAA,QACcN,eAAe,EAGrBF,WAAW,EACZC,WAAW;AAAA;AAAAgC,EAAA,GALvBzB,KAAK;AAqCX,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}