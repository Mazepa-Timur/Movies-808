{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst localTheme = localStorage.getItem('theme');\nconst themeDefault = localTheme === 'darkTheme' ? 'darkTheme' : 'lightTheme';\nconst settingTheme = createSlice({\n  name: 'themeStyle',\n  initialState: {\n    theme: themeDefault,\n    color: '#1889C8'\n  },\n  reducers: {\n    changeTheme: state => {\n      const theme = state.theme === 'lightTheme' ? 'darkTheme' : 'lightTheme';\n      localStorage.setItem('theme', theme);\n      return {\n        ...state,\n        theme\n      };\n    },\n    changeColor: (state, action) => {\n      const {\n        color\n      } = action.payload;\n      return {\n        ...state,\n        color\n      };\n    },\n    updataSetting: (state, action) => {\n      const {\n        color\n      } = action.payload;\n      const theme = action.payload.theme === 'darkTheme' ? 'darkTheme' : 'lightTheme';\n      return {\n        ...state,\n        color,\n        theme\n      };\n    },\n    restart: state => {\n      return {\n        theme: themeDefault,\n        color: '#1889C8'\n      };\n    }\n  }\n});\nexport const themeAction = settingTheme.actions;\nexport default settingTheme.reducer;","map":{"version":3,"names":["createSlice","localTheme","localStorage","getItem","themeDefault","settingTheme","name","initialState","theme","color","reducers","changeTheme","state","setItem","changeColor","action","payload","updataSetting","restart","themeAction","actions","reducer"],"sources":["S:/Code/Hi_808_V2/front-end/src/store/theme.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst localTheme = localStorage.getItem('theme')\r\nconst themeDefault = localTheme === 'darkTheme' ? 'darkTheme' : 'lightTheme';\r\n\r\nconst settingTheme = createSlice({\r\n  name: 'themeStyle',\r\n  initialState: {\r\n    theme: themeDefault,\r\n    color: '#1889C8',\r\n  },\r\n  reducers: {\r\n    changeTheme: (state) => {\r\n      const theme = state.theme === 'lightTheme' ? 'darkTheme' : 'lightTheme';\r\n      localStorage.setItem('theme', theme);\r\n      return {...state, theme}\r\n    },\r\n    changeColor: (state, action) => {\r\n      const {color} = action.payload\r\n      return {...state, color}\r\n    },\r\n    updataSetting: (state, action) => {\r\n      const {color} = action.payload\r\n      const theme = action.payload.theme === 'darkTheme' ? 'darkTheme' : 'lightTheme';\r\n      return {...state, color, theme}\r\n    },\r\n    restart: (state) => {\r\n      return { theme: themeDefault, color: '#1889C8' }\r\n    }\r\n  },\r\n});\r\nexport const themeAction = settingTheme.actions;\r\n\r\nexport default settingTheme.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAChD,MAAMC,YAAY,GAAGH,UAAU,KAAK,WAAW,GAAG,WAAW,GAAG,YAAY;AAE5E,MAAMI,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACZC,KAAK,EAAEJ,YAAY;IACnBK,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAGC,KAAK,IAAK;MACtB,MAAMJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,KAAK,YAAY,GAAG,WAAW,GAAG,YAAY;MACvEN,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;MACpC,OAAO;QAAC,GAAGI,KAAK;QAAEJ;MAAK,CAAC;IAC1B,CAAC;IACDM,WAAW,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;MAC9B,MAAM;QAACN;MAAK,CAAC,GAAGM,MAAM,CAACC,OAAO;MAC9B,OAAO;QAAC,GAAGJ,KAAK;QAAEH;MAAK,CAAC;IAC1B,CAAC;IACDQ,aAAa,EAAEA,CAACL,KAAK,EAAEG,MAAM,KAAK;MAChC,MAAM;QAACN;MAAK,CAAC,GAAGM,MAAM,CAACC,OAAO;MAC9B,MAAMR,KAAK,GAAGO,MAAM,CAACC,OAAO,CAACR,KAAK,KAAK,WAAW,GAAG,WAAW,GAAG,YAAY;MAC/E,OAAO;QAAC,GAAGI,KAAK;QAAEH,KAAK;QAAED;MAAK,CAAC;IACjC,CAAC;IACDU,OAAO,EAAGN,KAAK,IAAK;MAClB,OAAO;QAAEJ,KAAK,EAAEJ,YAAY;QAAEK,KAAK,EAAE;MAAU,CAAC;IAClD;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAMU,WAAW,GAAGd,YAAY,CAACe,OAAO;AAE/C,eAAef,YAAY,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}