{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\n// const localTheme = localStorage.getItem('theme')\n// const themeDefault = localTheme === 'darkTheme' ? 'darkTheme' : 'lightTheme';\n\nconst settingStyle = createSlice({\n  name: 'settingStyle',\n  initialState: {\n    theme: 'darkTheme',\n    backgraungColor: '#1A1A1A',\n    color: '#1889C8',\n    text: {\n      theme: 'dark theme'\n    }\n  },\n  reducers: {\n    changeTheme: state => {\n      const theme = state.theme === 'lightTheme' ? 'darkTheme' : 'lightTheme';\n      // localStorage.setItem('theme', theme);\n      if (theme) {\n        const text = {\n          ...state.theme,\n          theme: 'dark theme'\n        };\n      } else {\n        const text = {\n          ...state.theme,\n          theme: 'light theme'\n        };\n        return {\n          ...state,\n          theme,\n          text\n        };\n      }\n      return {\n        ...state,\n        theme\n      };\n    },\n    // changeColor: (state, action) => {\n    //   const {color} = action.payload\n    //   return {...state, color}\n    // },\n    // updataSetting: (state, action) => {\n    //   const {color} = action.payload\n    //   const theme = action.payload.theme === 'darkTheme' ? 'darkTheme' : 'lightTheme';\n    //   return {...state, color, theme}\n    // },\n    restart: state => {\n      return {\n        ...state\n      };\n    }\n  }\n});\nexport const settingStyleAction = settingStyle.actions;\nexport default settingStyle.reducer;","map":{"version":3,"names":["createSlice","settingStyle","name","initialState","theme","backgraungColor","color","text","reducers","changeTheme","state","restart","settingStyleAction","actions","reducer"],"sources":["S:/Code/Hi_808_V2/front-end-update/src/store/settingStyle.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// const localTheme = localStorage.getItem('theme')\r\n// const themeDefault = localTheme === 'darkTheme' ? 'darkTheme' : 'lightTheme';\r\n\r\nconst settingStyle = createSlice({\r\n  name: 'settingStyle',\r\n  initialState: {\r\n    theme: 'darkTheme',\r\n    backgraungColor: '#1A1A1A',\r\n    color: '#1889C8',\r\n    text: {\r\n      theme: 'dark theme'\r\n    }\r\n  },\r\n  reducers: {\r\n    changeTheme: (state) => {\r\n      const theme = state.theme === 'lightTheme' ? 'darkTheme' : 'lightTheme';\r\n      // localStorage.setItem('theme', theme);\r\n      if (theme) {\r\n        const text = {...state.theme, theme: 'dark theme'}\r\n      } else {\r\n        const text = {...state.theme, theme: 'light theme'}\r\n        return {...state, theme, text}\r\n      }\r\n      return {...state, theme}\r\n    },\r\n    // changeColor: (state, action) => {\r\n    //   const {color} = action.payload\r\n    //   return {...state, color}\r\n    // },\r\n    // updataSetting: (state, action) => {\r\n    //   const {color} = action.payload\r\n    //   const theme = action.payload.theme === 'darkTheme' ? 'darkTheme' : 'lightTheme';\r\n    //   return {...state, color, theme}\r\n    // },\r\n    restart: (state) => {\r\n      return { ...state }\r\n    }\r\n  },\r\n});\r\nexport const settingStyleAction = settingStyle.actions;\r\n\r\nexport default settingStyle.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;;AAEA,MAAMC,YAAY,GAAGD,WAAW,CAAC;EAC/BE,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE;IACZC,KAAK,EAAE,WAAW;IAClBC,eAAe,EAAE,SAAS;IAC1BC,KAAK,EAAE,SAAS;IAChBC,IAAI,EAAE;MACJH,KAAK,EAAE;IACT;EACF,CAAC;EACDI,QAAQ,EAAE;IACRC,WAAW,EAAGC,KAAK,IAAK;MACtB,MAAMN,KAAK,GAAGM,KAAK,CAACN,KAAK,KAAK,YAAY,GAAG,WAAW,GAAG,YAAY;MACvE;MACA,IAAIA,KAAK,EAAE;QACT,MAAMG,IAAI,GAAG;UAAC,GAAGG,KAAK,CAACN,KAAK;UAAEA,KAAK,EAAE;QAAY,CAAC;MACpD,CAAC,MAAM;QACL,MAAMG,IAAI,GAAG;UAAC,GAAGG,KAAK,CAACN,KAAK;UAAEA,KAAK,EAAE;QAAa,CAAC;QACnD,OAAO;UAAC,GAAGM,KAAK;UAAEN,KAAK;UAAEG;QAAI,CAAC;MAChC;MACA,OAAO;QAAC,GAAGG,KAAK;QAAEN;MAAK,CAAC;IAC1B,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAO,OAAO,EAAGD,KAAK,IAAK;MAClB,OAAO;QAAE,GAAGA;MAAM,CAAC;IACrB;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAME,kBAAkB,GAAGX,YAAY,CAACY,OAAO;AAEtD,eAAeZ,YAAY,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}